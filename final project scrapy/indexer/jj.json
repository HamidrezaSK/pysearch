[
{"url": "https://stackoverflow.com/questions/231767/what-does-the-yield-keyword-do", "tags": ["python", "iterator", "generator", "yield", "coroutine"], "question": ["hat", "use", "keyword", "ython", "hat", "example", "trying", "understand", "codethe", "nd", "caller", "hat", "happens", "method", "called", "list", "returned", "single", "element", "called", "hen", "subsequent", "calls", "stop"], "title": "What does the \u201cyield\u201d keyword do?"},
{"url": "https://stackoverflow.com/questions/36901/what-does-double-star-asterisk-and-star-asterisk-do-for-parameters", "tags": ["python", "syntax", "parameter-passing", "identifier", "kwargs"], "question": ["n", "following", "method", "definitions"], "title": "What does ** (double star/asterisk) and * (star/asterisk) do for parameters?"},
{"url": "https://stackoverflow.com/questions/663171/is-there-a-way-to-substring-a-string-in-python", "tags": ["python", "string"], "question": ["way", "substring", "string", "ython", "get", "new", "string", "3rd", "character", "end", "string", "aybe", "like", "f", "leaving", "second", "part", "means", "till", "end", "leave", "first", "part", "start", "start"], "title": "Is there a way to substring a string in Python?"},
{"url": "https://stackoverflow.com/questions/2612802/how-to-clone-or-copy-a-list", "tags": ["python", "list", "copy", "clone"], "question": ["hat", "options", "clone", "copy", "list", "ython", "sing", "modifies", "every", "time", "changes", "hy"], "title": "How to clone or copy a list?"},
{"url": "https://stackoverflow.com/questions/1712227/how-to-get-the-number-of-elements-in-a-list-in-python", "tags": ["python", "list"], "question": ["ow", "get", "number", "elements", "list"], "title": "How to get the number of elements in a list in Python?"},
{"url": "https://stackoverflow.com/questions/1720421/how-to-concatenate-two-lists-in-python", "tags": ["python", "list"], "question": ["ow", "concatenate", "two", "lists", "ython", "xample", "xpected", "outcome"], "title": "How to concatenate two lists in Python?"},
{"url": "https://stackoverflow.com/questions/68645/are-static-class-variables-possible", "tags": ["python", "class", "methods", "static", "class-variables"], "question": ["possible", "static", "class", "variables", "methods", "python", "hat", "syntax", "required"], "title": "Are static class variables possible?"},
{"url": "https://stackoverflow.com/questions/17271319/how-do-i-install-pip-on-macos-or-os-x", "tags": ["python", "macos", "pip", "install"], "question": ["spent", "day", "yesterday", "searching", "clear", "answer", "installing", "package", "manager", "ython", "find", "good", "solution", "ow", "install"], "title": "How do I install pip on macOS or OS X?"},
{"url": "https://stackoverflow.com/questions/3277503/in-python-how-do-i-read-a-file-line-by-line-into-a-list", "tags": ["python", "string", "file", "readlines"], "question": ["ow", "read", "every", "line", "file", "ython", "store", "line", "element", "list", "want", "read", "file", "line", "line", "append", "line", "end", "list"], "title": "In Python, how do I read a file line-by-line into a list?"},
{"url": "https://stackoverflow.com/questions/379906/how-do-i-parse-a-string-to-a-float-or-int-in-python", "tags": ["python", "parsing", "floating-point", "type-conversion", "integer"], "question": ["n", "ython", "parse", "numeric", "string", "like", "corresponding", "float", "value", "r", "parse", "string", "integer", "want", "know", "parse", "separately"], "title": "How do I parse a string to a float or int in Python?"},
{"url": "https://stackoverflow.com/questions/1024847/add-new-keys-to-a-dictionary", "tags": ["python", "dictionary"], "question": ["possible", "add", "key", "ython", "dictionary", "created", "seem", "method"], "title": "Add new keys to a dictionary?"},
{"url": "https://stackoverflow.com/questions/415511/how-to-get-the-current-time-in-python", "tags": ["python", "datetime", "time"], "question": ["hat", "module", "method", "used", "get", "current", "time"], "title": "How to get the current time in Python"},
{"url": "https://stackoverflow.com/questions/287871/print-in-terminal-with-colors", "tags": ["python", "unicode", "terminal", "ansi-colors"], "question": ["ow", "output", "colored", "text", "terminal", "ython", "hat", "best", "nicode", "symbol", "represent", "solid", "block"], "title": "Print in terminal with colors?"},
{"url": "https://stackoverflow.com/questions/101754/is-there-a-way-to-run-python-on-android", "tags": ["android", "python", "jython", "ase", "android-scripting"], "question": ["e", "working", "version", "platform", "nice", "ython", "owever", "nothing", "official", "ython", "ndroid", "since", "exists", "way", "let", "snake", "robot", "work", "together"], "title": "Is there a way to run Python on Android? [closed]"},
{"url": "https://stackoverflow.com/questions/6470428/catch-multiple-exceptions-in-one-line-except-block", "tags": ["python", "exception", "exception-handling"], "question": ["know", "also", "ut", "want", "thing", "inside", "two", "different", "exceptions", "best", "think", "right", "way", "something", "like", "since", "action", "take", "exceptions", "ow", "really", "work", "matches", "syntax", "effort", "catch", "two", "distinct", "exceptions", "exactly", "come", "way"], "title": "Catch multiple exceptions in one line (except block)"},
{"url": "https://stackoverflow.com/questions/6996603/how-to-delete-a-file-or-folder", "tags": ["python", "file-io", "folder", "delete-file"], "question": ["ow", "delete", "file", "folder", "ython"], "title": "How to delete a file or folder"},
{"url": "https://stackoverflow.com/questions/101268/hidden-features-of-python", "tags": ["python", "hidden-features"], "question": ["hat", "lesser", "known", "useful", "features", "ython", "programming", "language"], "title": "Hidden features of Python [closed]"},
{"url": "https://stackoverflow.com/questions/9371238/why-is-reading-lines-from-stdin-much-slower-in-c-than-python", "tags": ["c++", "python", "benchmarking", "readline", "getline"], "question": ["wanted", "compare", "reading", "lines", "string", "input", "stdin", "using", "ython", "shocked", "see", "code", "run", "order", "magnitude", "slower", "equivalent", "ython", "code", "ince", "rusty", "yet", "expert", "ythonista", "please", "tell", "something", "wrong", "misunderstanding", "something", "answer", "include", "statement", "use", "instead", "results", "scroll", "way", "bottom", "question", "look", "table", "kay", "tried", "suggestion", "trying", "ython", "store", "line", "read", "made", "difference", "python", "speed", "also", "tried", "suggestion", "using", "array", "instead", "ingo", "resulted", "equivalent", "performance", "ython", "3", "333", "333", "input", "data", "way", "short", "lines", "three", "fields", "usually", "20", "characters", "wide", "though", "sometimes", "ode", "peed", "es", "ran", "several", "times", "guess", "use", "instead", "ut", "still", "curious", "people", "think", "performance", "hit", "typical", "reasonable", "dding", "mmediately", "original", "loop", "results", "code", "runs", "faster", "ython", "2011", "ac", "ook", "ro", "using", "original", "code", "original", "sync", "disabled", "original", "ython", "code", "respectively", "file", "20", "lines", "text", "es", "ran", "several", "times", "eliminate", "disk", "caching", "confound", "hanks", "aughn", "ato", "answer", "suggested", "andalf", "ray", "even", "faster", "unsynchronized", "approach", "also", "learned", "due", "potential", "buffer", "overflow", "wrote", "iteration", "using", "safer", "alternative", "gets", "ere", "pertinent", "lines", "fellow", "noobs", "ow", "results", "using", "even", "larger", "file", "100", "lines", "3", "4", "fast", "server", "fast", "disk", "comparing", "ython", "code", "unsynchronised", "approaches", "well", "comparing", "wc", "utility", "version", "segmentation", "faulted", "feel", "like", "troubleshooting", "see", "better", "still", "pretty", "far", "wc", "performance", "pretty", "sure", "due", "fact", "wc", "examines", "character", "without", "memory", "copying", "suspect", "point", "parts", "code", "become", "bottleneck", "think", "optimizing", "level", "would", "even", "worthwhile", "even", "possible", "since", "actually", "need", "store", "read", "lines", "memory", "lso", "note", "small", "tradeoff", "using", "buffer", "vs", "unsynchronised", "string", "latter", "read", "lines", "length", "former", "requires", "limiting", "input", "finite", "number", "n", "practice", "probably", "non", "issue", "reading", "line", "based", "input", "files", "buffer", "set", "large", "value", "would", "exceeded", "valid", "input", "educational", "hanks", "comments", "suggestions", "suggested", "ebastian", "comments", "wc", "utility", "uses", "plain", "within", "safe", "read", "c", "wrapper", "read", "chunks", "16k", "bytes", "time", "count", "new", "lines", "ere", "ython", "equivalent", "based", "code", "showing", "relevant", "snippet", "replaces", "ython", "loop", "performance", "version", "quite", "fast", "though", "still", "bit", "slower", "raw", "wc", "utility", "course", "gain", "bit", "silly", "compare", "first", "python", "code", "one", "hand", "last", "ython", "snippet", "latter", "two", "actually", "store", "read", "lines", "merely", "count", "newlines", "till", "interesting", "explore", "different", "implementations", "think", "performance", "implications", "hanks", "completeness", "thought", "update", "read", "speed", "file", "box", "original", "synced", "code", "gain", "100", "line", "file", "fast", "disk", "ere", "complete", "table"], "title": "Why is reading lines from stdin much slower in C++ than Python?"},
{"url": "https://stackoverflow.com/questions/466345/converting-string-into-datetime", "tags": ["python", "datetime"], "question": ["hort", "simple", "got", "huge", "list", "date", "times", "like", "strings", "going", "shoving", "back", "proper", "datetime", "fields", "database", "need", "magic", "real", "datetime", "objects", "ny", "help", "even", "kick", "right", "direction", "would", "appreciated", "dit", "going", "jango", "use", "conversion", "insert"], "title": "Converting string into datetime"},
{"url": "https://stackoverflow.com/questions/576169/understanding-python-super-with-init-methods", "tags": ["python", "class", "oop", "inheritance", "super", "python"], "question": ["question", "already", "answer", "trying", "understand", "use", "rom", "looks", "child", "classes", "created", "fine", "curious", "know", "actual", "difference", "following", "2", "child", "classes"], "title": "Understanding Python super() with __init__() methods [duplicate]"},
{"url": "https://stackoverflow.com/questions/2052390/manually-raising-throwing-an-exception-in-python", "tags": ["python", "exception", "exception-handling"], "question": ["ow", "raise", "exception", "ython", "later", "caught", "via", "block"], "title": "Manually raising (throwing) an exception in Python"},
{"url": "https://stackoverflow.com/questions/5137497/find-current-directory-and-files-directory", "tags": ["python", "directory", "python"], "question": ["question", "already", "answer", "n", "ython", "commands", "use", "find"], "title": "Find current directory and file's directory [duplicate]"},
{"url": "https://stackoverflow.com/questions/510348/how-can-i-make-a-time-delay-in-python", "tags": ["python", "delay", "sleep", "timedelay"], "question": ["would", "like", "know", "put", "time", "delay", "ython", "script"], "title": "How can I make a time delay in Python?"},
{"url": "https://stackoverflow.com/questions/6797984/how-to-convert-string-to-lowercase-in-python", "tags": ["python", "string", "unicode", "uppercase", "lowercase"], "question": ["way", "convert", "string", "uppercase", "even", "part", "uppercase", "lowercase", "g", "ilometers", "kilometers"], "title": "How to convert string to lowercase in Python"},
{"url": "https://stackoverflow.com/questions/312443/how-do-you-split-a-list-into-evenly-sized-chunks", "tags": ["python", "list", "split", "chunks"], "question": ["list", "arbitrary", "length", "need", "split", "equal", "size", "chunks", "operate", "obvious", "ways", "like", "keeping", "counter", "two", "lists", "second", "list", "fills", "add", "first", "list", "empty", "second", "list", "next", "round", "data", "potentially", "extremely", "expensive", "wondering", "anyone", "good", "solution", "lists", "length", "e", "g", "using", "generators", "looking", "something", "useful", "find", "anything", "obviously", "useful", "ight", "missed", "though", "elated", "question"], "title": "How do you split a list into evenly sized chunks?"},
{"url": "https://stackoverflow.com/questions/952914/making-a-flat-list-out-of-list-of-lists-in-python", "tags": ["python", "list", "multidimensional-array", "flatten"], "question": ["wonder", "whether", "shortcut", "make", "simple", "list", "list", "lists", "ython", "loop", "maybe", "cool", "one", "liner", "tried", "get", "error"], "title": "Making a flat list out of list of lists in Python"},
{"url": "https://stackoverflow.com/questions/1602934/check-if-a-given-key-already-exists-in-a-dictionary", "tags": ["python", "dictionary"], "question": ["wanted", "test", "key", "exists", "dictionary", "updating", "value", "key", "wrote", "following", "code", "think", "best", "way", "accomplish", "task", "better", "way", "test", "key", "dictionary"], "title": "Check if a given key already exists in a dictionary"},
{"url": "https://stackoverflow.com/questions/3294889/iterating-over-dictionaries-using-for-loops", "tags": ["python", "python-2.7", "dictionary"], "question": ["bit", "puzzled", "following", "code", "hat", "understand", "portion", "ow", "ython", "recognize", "needs", "read", "key", "dictionary", "special", "word", "ython", "r", "simply", "variable"], "title": "Iterating over dictionaries using 'for' loops"},
{"url": "https://stackoverflow.com/questions/1132941/least-astonishment-and-the-mutable-default-argument", "tags": ["python", "language-design", "least-astonishment"], "question": ["nyone", "tinkering", "ython", "long", "enough", "bitten", "torn", "pieces", "following", "issue", "ython", "novices", "would", "expect", "function", "always", "return", "list", "one", "element", "result", "instead", "different", "astonishing", "novice", "manager", "mine", "first", "encounter", "feature", "called", "dramatic", "design", "flaw", "language", "replied", "behavior", "underlying", "explanation", "indeed", "puzzling", "unexpected", "understand", "internals", "owever", "able", "answer", "following", "question", "reason", "binding", "default", "argument", "function", "definition", "function", "execution", "doubt", "experienced", "behavior", "practical", "use", "really", "used", "static", "variables", "without", "breeding", "bugs", "aczek", "made", "interesting", "example", "ogether", "comments", "taal", "particular", "elaborated", "seems", "design", "decision", "relative", "put", "scope", "parameters", "inside", "function", "together", "oing", "binding", "inside", "function", "would", "mean", "effectively", "bound", "specified", "default", "function", "called", "defined", "something", "would", "present", "deep", "flaw", "line", "would", "hybrid", "sense", "part", "binding", "function", "object", "would", "happen", "definition", "part", "assignment", "default", "parameters", "function", "invocation", "time", "actual", "behavior", "consistent", "everything", "line", "gets", "evaluated", "line", "executed", "meaning", "function", "definition"], "title": "\u201cLeast Astonishment\u201d and the Mutable Default Argument"},
{"url": "https://stackoverflow.com/questions/1436703/difference-between-str-and-repr", "tags": ["python", "magic-methods", "repr"], "question": ["hat", "difference"], "title": "Difference between __str__ and __repr__?"},
{"url": "https://stackoverflow.com/questions/986006/how-do-i-pass-a-variable-by-reference", "tags": ["python", "reference", "parameter-passing", "pass-by-reference"], "question": ["ython", "documentation", "seems", "unclear", "whether", "parameters", "passed", "reference", "value", "following", "code", "produces", "unchanged", "value", "riginal", "something", "pass", "variable", "actual", "reference"], "title": "How do I pass a variable by reference?"},
{"url": "https://stackoverflow.com/questions/739654/how-to-make-a-chain-of-function-decorators", "tags": ["python", "decorator", "python-decorators"], "question": ["ow", "make", "two", "decorators", "ython", "would", "following", "return", "trying", "make", "way", "real", "application", "trying", "understand", "decorators", "decorator", "chaining", "works"], "title": "How to make a chain of function decorators?"},
{"url": "https://stackoverflow.com/questions/176918/finding-the-index-of-an-item-given-a-list-containing-it-in-python", "tags": ["python", "list"], "question": ["list", "item", "list", "get", "index", "1", "ython"], "title": "Finding the index of an item given a list containing it in Python"},
{"url": "https://stackoverflow.com/questions/423379/using-global-variables-in-a-function", "tags": ["python", "global-variables", "scope"], "question": ["ow", "create", "use", "global", "variable", "function", "f", "create", "global", "variable", "one", "function", "use", "global", "variable", "another", "function", "need", "store", "global", "variable", "local", "variable", "function", "needs", "access"], "title": "Using global variables in a function"},
{"url": "https://stackoverflow.com/questions/509211/understanding-pythons-slice-notation", "tags": ["python", "list", "slice"], "question": ["need", "good", "explanation", "references", "plus", "ython", "slice", "notation", "notation", "needs", "bit", "picking", "looks", "extremely", "powerful", "quite", "got", "head", "around"], "title": "Understanding Python's slice notation"},
{"url": "https://stackoverflow.com/questions/522563/accessing-the-index-in-for-loops", "tags": ["python", "loops", "list"], "question": ["ow", "access", "index", "list", "like", "following", "hen", "loop", "using", "loop", "access", "loop", "index", "1", "5", "case"], "title": "Accessing the index in 'for' loops?"},
{"url": "https://stackoverflow.com/questions/252703/difference-between-append-vs-extend-list-methods-in-python", "tags": ["python", "list", "data-structures", "append", "extend"], "question": ["hat", "difference", "list", "methods"], "title": "Difference between append vs. extend list methods in Python"},
{"url": "https://stackoverflow.com/questions/4750806/how-do-i-install-pip-on-windows", "tags": ["python", "windows", "installation", "pip", "easy-install"], "question": ["replacement", "ut", "install", "using", "indows", "better", "way"], "title": "How do I install pip on Windows?"},
{"url": "https://stackoverflow.com/questions/53513/how-do-i-check-if-a-list-is-empty", "tags": ["python", "list"], "question": ["example", "passed", "following", "ow", "check", "see", "empty"], "title": "How do I check if a list is empty?"},
{"url": "https://stackoverflow.com/questions/136097/what-is-the-difference-between-staticmethod-and-classmethod-in-python", "tags": ["python", "oop", "methods", "python-decorators"], "question": ["hat", "difference", "function", "decorated", "one", "decorated"], "title": "What is the difference between @staticmethod and @classmethod in Python?"},
{"url": "https://stackoverflow.com/questions/3437059/does-python-have-a-string-contains-substring-method", "tags": ["python", "string", "substring", "contains"], "question": ["looking", "method", "ython", "want"], "title": "Does Python have a string 'contains' substring method?"},
{"url": "https://stackoverflow.com/questions/613183/how-do-i-sort-a-dictionary-by-value", "tags": ["python", "sorting", "dictionary"], "question": ["dictionary", "values", "read", "two", "fields", "database", "string", "field", "numeric", "field", "string", "field", "unique", "key", "dictionary", "sort", "keys", "sort", "based", "values", "ote", "read", "tack", "verflow", "question", "probably", "could", "change", "code", "list", "dictionaries", "since", "really", "need", "list", "dictionaries", "wanted", "know", "simpler", "solution"], "title": "How do I sort a dictionary by value?"},
{"url": "https://stackoverflow.com/questions/273192/how-can-i-safely-create-a-nested-directory-in-python", "tags": ["python", "exception", "path", "directory", "operating-system"], "question": ["hat", "elegant", "way", "check", "directory", "file", "going", "written", "exists", "create", "directory", "using", "ython", "ere", "tried", "omehow", "missed", "thanks", "kanja", "lair", "ouglas", "flag", "open", "makes", "happen", "automatically"], "title": "How can I safely create a nested directory in Python?"},
{"url": "https://stackoverflow.com/questions/38987/how-to-merge-two-dictionaries-in-a-single-expression", "tags": ["python", "python-3.x", "dictionary", "mapping", "idioms"], "question": ["two", "ython", "dictionaries", "want", "write", "single", "expression", "returns", "two", "dictionaries", "merged", "method", "would", "need", "returned", "result", "instead", "modifying", "dict", "place", "ow", "get", "final", "merged", "dict", "extra", "clear", "last", "one", "wins", "conflict", "handling", "looking", "well"], "title": "How to merge two dictionaries in a single expression?"},
{"url": "https://stackoverflow.com/questions/419163/what-does-if-name-main-do", "tags": ["python", "namespaces", "main", "python-module", "idioms"], "question": ["hat"], "title": "What does if __name__ == \u201c__main__\u201d: do?"},
{"url": "https://stackoverflow.com/questions/3207219/how-do-i-list-all-files-of-a-directory", "tags": ["python", "directory"], "question": ["ow", "list", "files", "directory", "ython", "add"], "title": "How do I list all files of a directory?"},
{"url": "https://stackoverflow.com/questions/82831/how-do-i-check-whether-a-file-exists", "tags": ["python", "file"], "question": ["ow", "see", "file", "exists", "without", "using", "statement"], "title": "How do I check whether a file exists?"},
{"url": "https://stackoverflow.com/questions/89228/calling-an-external-command-in-python", "tags": ["python", "shell", "command", "subprocess", "external"], "question": ["ow", "call", "external", "command", "typed", "nix", "shell", "indows", "command", "prompt", "within", "ython", "script"], "title": "Calling an external command in Python"},
{"url": "https://stackoverflow.com/questions/394809/does-python-have-a-ternary-conditional-operator", "tags": ["python", "operators", "ternary-operator", "conditional-operator", "python-2.5"], "question": ["f", "ython", "ternary", "conditional", "operator", "possible", "simulate", "one", "using", "language", "constructs"], "title": "Does Python have a ternary conditional operator?"},
{"url": "https://stackoverflow.com/questions/100003/what-are-metaclasses-in-python", "tags": ["python", "oop", "metaclass", "python-datamodel"], "question": ["hat", "metaclasses", "use"], "title": "What are metaclasses in Python?"}
][
{"url": "https://stackoverflow.com/questions/231767/what-does-the-yield-keyword-do", "tags": ["python", "iterator", "generator", "yield", "coroutine"], "question": ["What", "use", "keyword", "Python", "What", "theFor", "example", "I", "trying", "understand", "codethe", "theAnd", "caller", "theWhat", "happens", "method", "called", "Is", "list", "returned", "A", "single", "element", "Is", "called", "When", "subsequent", "calls", "stop"], "title": "What does the \u201cyield\u201d keyword do?"},
{"url": "https://stackoverflow.com/questions/2612802/how-to-clone-or-copy-a-list", "tags": ["python", "list", "copy", "clone"], "question": ["What", "options", "clone", "copy", "list", "Python", "theUsing", "modifies", "every", "time", "changes", "Why"], "title": "How to clone or copy a list?"},
{"url": "https://stackoverflow.com/questions/1712227/how-to-get-the-number-of-elements-in-a-list-in-python", "tags": ["python", "list"], "question": ["How", "I", "get", "number", "elements", "list"], "title": "How to get the number of elements in a list in Python?"},
{"url": "https://stackoverflow.com/questions/68645/are-static-class-variables-possible", "tags": ["python", "class", "methods", "static", "class-variables"], "question": ["Is", "possible", "static", "class", "variables", "methods", "python", "What", "syntax", "required"], "title": "Are static class variables possible?"},
{"url": "https://stackoverflow.com/questions/3277503/in-python-how-do-i-read-a-file-line-by-line-into-a-list", "tags": ["python", "string", "file", "readlines"], "question": ["How", "I", "read", "every", "line", "file", "Python", "store", "line", "element", "list", "theI", "want", "read", "file", "line", "line", "append", "line", "end", "list"], "title": "In Python, how do I read a file line-by-line into a list?"},
{"url": "https://stackoverflow.com/questions/36901/what-does-double-star-asterisk-and-star-asterisk-do-for-parameters", "tags": ["python", "syntax", "parameter-passing", "identifier", "kwargs"], "question": ["In", "following", "method", "definitions"], "title": "What does ** (double star/asterisk) and * (star/asterisk) do for parameters?"},
{"url": "https://stackoverflow.com/questions/312443/how-do-you-split-a-list-into-evenly-sized-chunks", "tags": ["python", "list", "split", "chunks"], "question": ["I", "list", "arbitrary", "length", "I", "need", "split", "equal", "size", "chunks", "operate", "There", "obvious", "ways", "like", "keeping", "counter", "two", "lists", "second", "list", "fills", "add", "first", "list", "empty", "second", "list", "next", "round", "data", "potentially", "extremely", "expensive", "theI", "wondering", "anyone", "good", "solution", "lists", "length", "e", "g", "using", "generators", "theI", "looking", "something", "useful", "I", "find", "anything", "obviously", "useful", "Might", "missed", "though", "theRelated", "question"], "title": "How do you split a list into evenly sized chunks?"},
{"url": "https://stackoverflow.com/questions/379906/how-do-i-parse-a-string-to-a-float-or-int-in-python", "tags": ["python", "parsing", "floating-point", "type-conversion", "integer"], "question": ["In", "Python", "I", "parse", "numeric", "string", "like", "corresponding", "float", "value", "Or", "parse", "string", "integer", "theI", "want", "know", "parse", "separately"], "title": "How do I parse a string to a float or int in Python?"},
{"url": "https://stackoverflow.com/questions/1024847/add-new-keys-to-a-dictionary", "tags": ["python", "dictionary"], "question": ["Is", "possible", "add", "key", "Python", "dictionary", "created", "It", "seem", "method"], "title": "Add new keys to a dictionary?"},
{"url": "https://stackoverflow.com/questions/17271319/how-do-i-install-pip-on-macos-or-os-x", "tags": ["python", "macos", "pip", "install"], "question": ["I", "spent", "day", "yesterday", "searching", "clear", "answer", "installing", "package", "manager", "Python", "I", "find", "good", "solution", "theHow", "I", "install"], "title": "How do I install pip on macOS or OS X?"},
{"url": "https://stackoverflow.com/questions/101754/is-there-a-way-to-run-python-on-android", "tags": ["android", "python", "jython", "ase", "android-scripting"], "question": ["We", "working", "version", "platform", "nice", "Python", "API", "theHowever", "nothing", "official", "Python", "Android", "since", "exists", "way", "let", "snake", "robot", "work", "together"], "title": "Is there a way to run Python on Android? [closed]"},
{"url": "https://stackoverflow.com/questions/1720421/how-to-concatenate-two-lists-in-python", "tags": ["python", "list"], "question": ["How", "I", "concatenate", "two", "lists", "Python", "theExample", "theExpected", "outcome"], "title": "How to concatenate two lists in Python?"},
{"url": "https://stackoverflow.com/questions/287871/print-in-terminal-with-colors", "tags": ["python", "unicode", "terminal", "ansi-colors"], "question": ["How", "I", "output", "colored", "text", "terminal", "Python", "What", "best", "Unicode", "symbol", "represent", "solid", "block"], "title": "Print in terminal with colors?"},
{"url": "https://stackoverflow.com/questions/6996603/how-to-delete-a-file-or-folder", "tags": ["python", "file-io", "folder", "delete-file"], "question": ["How", "I", "delete", "file", "folder", "Python"], "title": "How to delete a file or folder"},
{"url": "https://stackoverflow.com/questions/663171/is-there-a-way-to-substring-a-string-in-python", "tags": ["python", "string"], "question": ["Is", "way", "substring", "string", "Python", "get", "new", "string", "3rd", "character", "end", "string", "theMaybe", "like", "theIf", "leaving", "second", "part", "means", "till", "end", "leave", "first", "part", "start", "start"], "title": "Is there a way to substring a string in Python?"},
{"url": "https://stackoverflow.com/questions/6470428/catch-multiple-exceptions-in-one-line-except-block", "tags": ["python", "exception", "exception-handling"], "question": ["I", "know", "I", "theI", "also", "theBut", "I", "want", "thing", "inside", "two", "different", "exceptions", "best", "I", "think", "right", "theIs", "way", "I", "something", "like", "since", "action", "take", "exceptions", "theNow", "really", "work", "matches", "syntax", "theSo", "effort", "catch", "two", "distinct", "exceptions", "exactly", "come", "theIs", "way"], "title": "Catch multiple exceptions in one line (except block)"},
{"url": "https://stackoverflow.com/questions/9371238/why-is-reading-lines-from-stdin-much-slower-in-c-than-python", "tags": ["c++", "python", "benchmarking", "readline", "getline"], "question": ["I", "wanted", "compare", "reading", "lines", "string", "input", "stdin", "using", "Python", "C", "shocked", "see", "C", "code", "run", "order", "magnitude", "slower", "equivalent", "Python", "code", "Since", "C", "rusty", "I", "yet", "expert", "Pythonista", "please", "tell", "I", "something", "wrong", "I", "misunderstanding", "something", "TLDR", "answer", "include", "statement", "use", "instead", "theTLDR", "results", "scroll", "way", "bottom", "question", "look", "table", "theOkay", "I", "tried", "J", "N", "suggestion", "trying", "Python", "store", "line", "read", "made", "difference", "python", "speed", "theI", "also", "tried", "J", "N", "suggestion", "using", "array", "instead", "Bingo", "This", "resulted", "equivalent", "performance", "Python", "C", "3", "333", "333", "LPS", "input", "data", "way", "short", "lines", "three", "fields", "usually", "20", "characters", "wide", "though", "sometimes", "theCode", "theSpeed", "Yes", "I", "ran", "several", "times", "So", "I", "guess", "I", "use", "instead", "But", "I", "still", "curious", "people", "think", "performance", "hit", "typical", "reasonable", "theAdding", "theImmediately", "original", "loop", "results", "code", "runs", "faster", "Python", "2011", "MacBook", "Pro", "using", "original", "code", "original", "sync", "disabled", "original", "Python", "code", "respectively", "file", "20M", "lines", "text", "Yes", "I", "ran", "several", "times", "eliminate", "disk", "caching", "confound", "theThanks", "Vaughn", "Cato", "answer", "-", "theAs", "suggested", "Gandalf", "The", "Gray", "even", "faster", "unsynchronized", "approach", "I", "also", "learned", "UNSAFE", "NOT", "BE", "USED", "due", "potential", "buffer", "overflow", "So", "I", "wrote", "iteration", "using", "safer", "alternative", "gets", "Here", "pertinent", "lines", "fellow", "noobs", "theNow", "results", "using", "even", "larger", "file", "100M", "lines", "3", "4", "GB", "fast", "server", "fast", "disk", "comparing", "Python", "code", "unsynchronised", "approaches", "well", "comparing", "wc", "utility", "The", "version", "segmentation", "faulted", "I", "feel", "like", "troubleshooting", "theAs", "see", "better", "still", "pretty", "far", "wc", "performance", "I", "pretty", "sure", "due", "fact", "wc", "examines", "character", "without", "memory", "copying", "I", "suspect", "point", "parts", "code", "become", "bottleneck", "I", "think", "optimizing", "level", "would", "even", "worthwhile", "even", "possible", "since", "I", "actually", "need", "store", "read", "lines", "memory", "theAlso", "note", "small", "tradeoff", "using", "buffer", "vs", "unsynchronised", "string", "latter", "read", "lines", "length", "former", "requires", "limiting", "input", "finite", "number", "In", "practice", "probably", "non-issue", "reading", "line-based", "input", "files", "buffer", "set", "large", "value", "would", "exceeded", "valid", "input", "theThis", "educational", "Thanks", "comments", "suggestions", "theAs", "suggested", "J", "F", "Sebastian", "comments", "GNU", "wc", "utility", "uses", "plain", "C", "within", "safe-read", "c", "wrapper", "read", "chunks", "16k", "bytes", "time", "count", "new", "lines", "Here", "Python", "equivalent", "based", "J", "F", "code", "showing", "relevant", "snippet", "replaces", "Python", "loop", "theThe", "performance", "version", "quite", "fast", "though", "still", "bit", "slower", "raw", "C", "wc", "utility", "course", "theAgain", "bit", "silly", "compare", "C", "first", "python", "code", "one", "hand", "last", "Python", "snippet", "latter", "two", "actually", "store", "read", "lines", "merely", "count", "newlines", "Still", "interesting", "explore", "different", "implementations", "think", "performance", "implications", "Thanks", "theFor", "completeness", "I", "thought", "I", "update", "read", "speed", "file", "box", "original", "synced", "C", "code", "Again", "100M", "line", "file", "fast", "disk", "Here", "complete", "table"], "title": "Why is reading lines from stdin much slower in C++ than Python?"},
{"url": "https://stackoverflow.com/questions/415511/how-to-get-the-current-time-in-python", "tags": ["python", "datetime", "time"], "question": ["What", "module", "method", "used", "get", "current", "time"], "title": "How to get the current time in Python"},
{"url": "https://stackoverflow.com/questions/510348/how-can-i-make-a-time-delay-in-python", "tags": ["python", "delay", "sleep", "timedelay"], "question": ["I", "would", "like", "know", "put", "time", "delay", "Python", "script"], "title": "How can I make a time delay in Python?"},
{"url": "https://stackoverflow.com/questions/5137497/find-current-directory-and-files-directory", "tags": ["python", "directory", "python"], "question": ["This", "question", "already", "answer", "theIn", "Python", "commands", "I", "use", "find"], "title": "Find current directory and file's directory [duplicate]"},
{"url": "https://stackoverflow.com/questions/576169/understanding-python-super-with-init-methods", "tags": ["python", "class", "oop", "inheritance", "super", "python"], "question": ["This", "question", "already", "answer", "theI", "trying", "understand", "use", "From", "looks", "child", "classes", "created", "fine", "theI", "curious", "know", "actual", "difference", "following", "2", "child", "classes"], "title": "Understanding Python super() with __init__() methods [duplicate]"},
{"url": "https://stackoverflow.com/questions/101268/hidden-features-of-python", "tags": ["python", "hidden-features"], "question": ["What", "lesser-known", "useful", "features", "Python", "programming", "language"], "title": "Hidden features of Python [closed]"},
{"url": "https://stackoverflow.com/questions/466345/converting-string-into-datetime", "tags": ["python", "datetime"], "question": ["Short", "simple", "I", "got", "huge", "list", "date-times", "like", "strings", "theI", "going", "shoving", "back", "proper", "datetime", "fields", "database", "I", "need", "magic", "real", "datetime", "objects", "theAny", "help", "even", "kick", "right", "direction", "would", "appreciated", "theEdit", "This", "going", "Django", "ORM", "I", "use", "SQL", "conversion", "insert"], "title": "Converting string into datetime"},
{"url": "https://stackoverflow.com/questions/6797984/how-to-convert-string-to-lowercase-in-python", "tags": ["python", "string", "unicode", "uppercase", "lowercase"], "question": ["Is", "way", "convert", "string", "uppercase", "even", "part", "uppercase", "lowercase", "theE", "g", "Kilometers", "--", "kilometers"], "title": "How to convert string to lowercase in Python"},
{"url": "https://stackoverflow.com/questions/2052390/manually-raising-throwing-an-exception-in-python", "tags": ["python", "exception", "exception-handling"], "question": ["How", "I", "raise", "exception", "Python", "later", "caught", "via", "block"], "title": "Manually raising (throwing) an exception in Python"},
{"url": "https://stackoverflow.com/questions/3294889/iterating-over-dictionaries-using-for-loops", "tags": ["python", "python-2.7", "dictionary"], "question": ["I", "bit", "puzzled", "following", "code", "theWhat", "I", "understand", "portion", "How", "Python", "recognize", "needs", "read", "key", "dictionary", "Is", "special", "word", "Python", "Or", "simply", "variable"], "title": "Iterating over dictionaries using 'for' loops"},
{"url": "https://stackoverflow.com/questions/1132941/least-astonishment-and-the-mutable-default-argument", "tags": ["python", "language-design", "least-astonishment"], "question": ["Anyone", "tinkering", "Python", "long", "enough", "bitten", "torn", "pieces", "following", "issue", "thePython", "novices", "would", "expect", "function", "always", "return", "list", "one", "element", "The", "result", "instead", "different", "astonishing", "novice", "theA", "manager", "mine", "first", "encounter", "feature", "called", "dramatic", "design", "flaw", "language", "I", "replied", "behavior", "underlying", "explanation", "indeed", "puzzling", "unexpected", "understand", "internals", "However", "I", "able", "answer", "following", "question", "reason", "binding", "default", "argument", "function", "definition", "function", "execution", "I", "doubt", "experienced", "behavior", "practical", "use", "really", "used", "static", "variables", "C", "without", "breeding", "bugs", "theBaczek", "made", "interesting", "example", "Together", "comments", "Utaal", "particular", "I", "elaborated", "theTo", "seems", "design", "decision", "relative", "put", "scope", "parameters", "inside", "function", "together", "theDoing", "binding", "inside", "function", "would", "mean", "effectively", "bound", "specified", "default", "function", "called", "defined", "something", "would", "present", "deep", "flaw", "line", "would", "hybrid", "sense", "part", "binding", "function", "object", "would", "happen", "definition", "part", "assignment", "default", "parameters", "function", "invocation", "time", "theThe", "actual", "behavior", "consistent", "everything", "line", "gets", "evaluated", "line", "executed", "meaning", "function", "definition"], "title": "\u201cLeast Astonishment\u201d and the Mutable Default Argument"},
{"url": "https://stackoverflow.com/questions/986006/how-do-i-pass-a-variable-by-reference", "tags": ["python", "reference", "parameter-passing", "pass-by-reference"], "question": ["The", "Python", "documentation", "seems", "unclear", "whether", "parameters", "passed", "reference", "value", "following", "code", "produces", "unchanged", "value", "Original", "theIs", "something", "I", "pass", "variable", "actual", "reference"], "title": "How do I pass a variable by reference?"},
{"url": "https://stackoverflow.com/questions/952914/making-a-flat-list-out-of-list-of-lists-in-python", "tags": ["python", "list", "multidimensional-array", "flatten"], "question": ["I", "wonder", "whether", "shortcut", "make", "simple", "list", "list", "lists", "Python", "theI", "loop", "maybe", "cool", "one-liner", "I", "tried", "I", "get", "error"], "title": "Making a flat list out of list of lists in Python"},
{"url": "https://stackoverflow.com/questions/1436703/difference-between-str-and-repr", "tags": ["python", "magic-methods", "repr"], "question": ["What", "difference"], "title": "Difference between __str__ and __repr__?"},
{"url": "https://stackoverflow.com/questions/739654/how-to-make-a-chain-of-function-decorators", "tags": ["python", "decorator", "python-decorators"], "question": ["How", "I", "make", "two", "decorators", "Python", "would", "following", "return", "theI", "trying", "make", "way", "real", "application", "-", "trying", "understand", "decorators", "decorator", "chaining", "works"], "title": "How to make a chain of function decorators?"},
{"url": "https://stackoverflow.com/questions/1602934/check-if-a-given-key-already-exists-in-a-dictionary", "tags": ["python", "dictionary"], "question": ["I", "wanted", "test", "key", "exists", "dictionary", "updating", "value", "key", "I", "wrote", "following", "code", "theI", "think", "best", "way", "accomplish", "task", "Is", "better", "way", "test", "key", "dictionary"], "title": "Check if a given key already exists in a dictionary"},
{"url": "https://stackoverflow.com/questions/423379/using-global-variables-in-a-function", "tags": ["python", "global-variables", "scope"], "question": ["How", "I", "create", "use", "global", "variable", "function", "theIf", "I", "create", "global", "variable", "one", "function", "I", "use", "global", "variable", "another", "function", "Do", "I", "need", "store", "global", "variable", "local", "variable", "function", "needs", "access"], "title": "Using global variables in a function"},
{"url": "https://stackoverflow.com/questions/509211/understanding-pythons-slice-notation", "tags": ["python", "list", "slice"], "question": ["I", "need", "good", "explanation", "references", "plus", "Python", "slice", "notation", "theTo", "notation", "needs", "bit", "picking", "theIt", "looks", "extremely", "powerful", "I", "quite", "got", "head", "around"], "title": "Understanding Python's slice notation"},
{"url": "https://stackoverflow.com/questions/176918/finding-the-index-of-an-item-given-a-list-containing-it-in-python", "tags": ["python", "list"], "question": ["For", "list", "item", "list", "I", "get", "index", "1", "Python"], "title": "Finding the index of an item given a list containing it in Python"},
{"url": "https://stackoverflow.com/questions/252703/difference-between-append-vs-extend-list-methods-in-python", "tags": ["python", "list", "data-structures", "append", "extend"], "question": ["What", "difference", "list", "methods"], "title": "Difference between append vs. extend list methods in Python"},
{"url": "https://stackoverflow.com/questions/522563/accessing-the-index-in-for-loops", "tags": ["python", "loops", "list"], "question": ["How", "I", "access", "index", "list", "like", "following", "theWhen", "I", "loop", "using", "loop", "I", "access", "loop", "index", "1", "5", "case"], "title": "Accessing the index in 'for' loops?"},
{"url": "https://stackoverflow.com/questions/136097/what-is-the-difference-between-staticmethod-and-classmethod-in-python", "tags": ["python", "oop", "methods", "python-decorators"], "question": ["What", "difference", "function", "decorated", "one", "decorated"], "title": "What is the difference between @staticmethod and @classmethod in Python?"},
{"url": "https://stackoverflow.com/questions/3437059/does-python-have-a-string-contains-substring-method", "tags": ["python", "string", "substring", "contains"], "question": ["I", "looking", "method", "Python", "theI", "want"], "title": "Does Python have a string 'contains' substring method?"},
{"url": "https://stackoverflow.com/questions/273192/how-can-i-safely-create-a-nested-directory-in-python", "tags": ["python", "exception", "path", "directory", "operating-system"], "question": ["What", "elegant", "way", "check", "directory", "file", "going", "written", "exists", "create", "directory", "using", "Python", "Here", "I", "tried", "theSomehow", "I", "missed", "thanks", "kanja", "Blair", "Douglas", "This", "I", "theIs", "flag", "open", "makes", "happen", "automatically"], "title": "How can I safely create a nested directory in Python?"},
{"url": "https://stackoverflow.com/questions/4750806/how-do-i-install-pip-on-windows", "tags": ["python", "windows", "installation", "pip", "easy-install"], "question": ["replacement", "But", "I", "install", "using", "Windows", "Is", "better", "way"], "title": "How do I install pip on Windows?"},
{"url": "https://stackoverflow.com/questions/3207219/how-do-i-list-all-files-of-a-directory", "tags": ["python", "directory"], "question": ["How", "I", "list", "files", "directory", "Python", "add"], "title": "How do I list all files of a directory?"},
{"url": "https://stackoverflow.com/questions/38987/how-to-merge-two-dictionaries-in-a-single-expression", "tags": ["python", "python-3.x", "dictionary", "mapping", "idioms"], "question": ["I", "two", "Python", "dictionaries", "I", "want", "write", "single", "expression", "returns", "two", "dictionaries", "merged", "The", "method", "would", "I", "need", "returned", "result", "instead", "modifying", "dict", "in-place", "theHow", "I", "get", "final", "merged", "dict", "To", "extra-clear", "last-one-wins", "conflict-handling", "I", "looking", "well"], "title": "How to merge two dictionaries in a single expression?"},
{"url": "https://stackoverflow.com/questions/53513/how-do-i-check-if-a-list-is-empty", "tags": ["python", "list"], "question": ["For", "example", "passed", "following", "theHow", "I", "check", "see", "empty"], "title": "How do I check if a list is empty?"},
{"url": "https://stackoverflow.com/questions/82831/how-do-i-check-whether-a-file-exists", "tags": ["python", "file"], "question": ["How", "I", "see", "file", "exists", "without", "using", "statement"], "title": "How do I check whether a file exists?"},
{"url": "https://stackoverflow.com/questions/613183/how-do-i-sort-a-dictionary-by-value", "tags": ["python", "sorting", "dictionary"], "question": ["I", "dictionary", "values", "read", "two", "fields", "database", "string", "field", "numeric", "field", "The", "string", "field", "unique", "key", "dictionary", "theI", "sort", "keys", "I", "sort", "based", "values", "theNote", "I", "read", "Stack", "Overflow", "question", "probably", "could", "change", "code", "list", "dictionaries", "since", "I", "really", "need", "list", "dictionaries", "I", "wanted", "know", "simpler", "solution"], "title": "How do I sort a dictionary by value?"},
{"url": "https://stackoverflow.com/questions/89228/calling-an-external-command-in-python", "tags": ["python", "shell", "command", "subprocess", "external"], "question": ["How", "I", "call", "external", "command", "I", "typed", "Unix", "shell", "Windows", "command", "prompt", "within", "Python", "script"], "title": "Calling an external command in Python"},
{"url": "https://stackoverflow.com/questions/419163/what-does-if-name-main-do", "tags": ["python", "namespaces", "main", "python-module", "idioms"], "question": ["What"], "title": "What does if __name__ == \u201c__main__\u201d: do?"},
{"url": "https://stackoverflow.com/questions/394809/does-python-have-a-ternary-conditional-operator", "tags": ["python", "operators", "ternary-operator", "conditional-operator", "python-2.5"], "question": ["If", "Python", "ternary", "conditional", "operator", "possible", "simulate", "one", "using", "language", "constructs"], "title": "Does Python have a ternary conditional operator?"},
{"url": "https://stackoverflow.com/questions/100003/what-are-metaclasses-in-python", "tags": ["python", "oop", "metaclass", "python-datamodel"], "question": ["What", "metaclasses", "use"], "title": "What are metaclasses in Python?"}
][
{"url": "https://stackoverflow.com/questions/231767/what-does-the-yield-keyword-do", "tags": ["python", "iterator", "generator", "yield", "coroutine"], "question": ["What", "is", "the", "use", "of", "the", "the", "keyword", "in", "Python", "What", "does", "it", "do", "theFor", "example", "I", "m", "trying", "to", "understand", "this", "codethe", "theAnd", "this", "is", "the", "caller", "theWhat", "happens", "when", "the", "method", "the", "is", "called", "Is", "a", "list", "returned", "A", "single", "element", "Is", "it", "called", "again", "When", "will", "subsequent", "calls", "stop"], "title": "What does the \u201cyield\u201d keyword do?"},
{"url": "https://stackoverflow.com/questions/1712227/how-to-get-the-number-of-elements-in-a-list-in-python", "tags": ["python", "list"], "question": ["How", "do", "I", "get", "the", "number", "of", "elements", "in", "the", "list"], "title": "How to get the number of elements in a list in Python?"},
{"url": "https://stackoverflow.com/questions/663171/is-there-a-way-to-substring-a-string-in-python", "tags": ["python", "string"], "question": ["Is", "there", "a", "way", "to", "substring", "a", "string", "in", "Python", "to", "get", "a", "new", "string", "from", "the", "3rd", "character", "to", "the", "end", "of", "the", "string", "theMaybe", "like", "the", "theIf", "leaving", "the", "second", "part", "means", "till", "the", "end", "if", "you", "leave", "the", "first", "part", "does", "it", "start", "from", "the", "start"], "title": "Is there a way to substring a string in Python?"},
{"url": "https://stackoverflow.com/questions/3277503/in-python-how-do-i-read-a-file-line-by-line-into-a-list", "tags": ["python", "string", "file", "readlines"], "question": ["How", "do", "I", "read", "every", "line", "of", "a", "file", "in", "Python", "and", "store", "each", "line", "as", "an", "element", "in", "a", "list", "theI", "want", "to", "read", "the", "file", "line", "by", "line", "and", "append", "each", "line", "to", "the", "end", "of", "the", "list"], "title": "In Python, how do I read a file line-by-line into a list?"},
{"url": "https://stackoverflow.com/questions/287871/print-in-terminal-with-colors", "tags": ["python", "unicode", "terminal", "ansi-colors"], "question": ["How", "can", "I", "output", "colored", "text", "to", "the", "terminal", "in", "Python", "What", "is", "the", "best", "Unicode", "symbol", "to", "represent", "a", "solid", "block"], "title": "Print in terminal with colors?"},
{"url": "https://stackoverflow.com/questions/2612802/how-to-clone-or-copy-a-list", "tags": ["python", "list", "copy", "clone"], "question": ["What", "are", "the", "options", "to", "clone", "or", "copy", "a", "list", "in", "Python", "theUsing", "the", "then", "modifies", "the", "every", "time", "the", "changes", "the", "Why", "is", "this"], "title": "How to clone or copy a list?"},
{"url": "https://stackoverflow.com/questions/1720421/how-to-concatenate-two-lists-in-python", "tags": ["python", "list"], "question": ["How", "do", "I", "concatenate", "two", "lists", "in", "Python", "theExample", "theExpected", "outcome"], "title": "How to concatenate two lists in Python?"},
{"url": "https://stackoverflow.com/questions/36901/what-does-double-star-asterisk-and-star-asterisk-do-for-parameters", "tags": ["python", "syntax", "parameter-passing", "identifier", "kwargs"], "question": ["In", "the", "following", "method", "definitions", "what", "does", "the", "the", "and", "the", "do", "for", "the"], "title": "What does ** (double star/asterisk) and * (star/asterisk) do for parameters?"},
{"url": "https://stackoverflow.com/questions/312443/how-do-you-split-a-list-into-evenly-sized-chunks", "tags": ["python", "list", "split", "chunks"], "question": ["I", "have", "a", "list", "of", "arbitrary", "length", "and", "I", "need", "to", "split", "it", "up", "into", "equal", "size", "chunks", "and", "operate", "on", "it", "There", "are", "some", "obvious", "ways", "to", "do", "this", "like", "keeping", "a", "counter", "and", "two", "lists", "and", "when", "the", "second", "list", "fills", "up", "add", "it", "to", "the", "first", "list", "and", "empty", "the", "second", "list", "for", "the", "next", "round", "of", "data", "but", "this", "is", "potentially", "extremely", "expensive", "theI", "was", "wondering", "if", "anyone", "had", "a", "good", "solution", "to", "this", "for", "lists", "of", "any", "length", "e", "g", "using", "generators", "theI", "was", "looking", "for", "something", "useful", "in", "the", "but", "I", "couldn", "t", "find", "anything", "obviously", "useful", "Might", "ve", "missed", "it", "though", "theRelated", "question"], "title": "How do you split a list into evenly sized chunks?"},
{"url": "https://stackoverflow.com/questions/17271319/how-do-i-install-pip-on-macos-or-os-x", "tags": ["python", "macos", "pip", "install"], "question": ["I", "spent", "most", "of", "the", "day", "yesterday", "searching", "for", "a", "clear", "answer", "for", "installing", "the", "package", "manager", "for", "Python", "I", "can", "t", "find", "a", "good", "solution", "theHow", "do", "I", "install", "it"], "title": "How do I install pip on macOS or OS X?"},
{"url": "https://stackoverflow.com/questions/6470428/catch-multiple-exceptions-in-one-line-except-block", "tags": ["python", "exception", "exception-handling"], "question": ["I", "know", "that", "I", "can", "do", "theI", "can", "also", "do", "this", "theBut", "if", "I", "want", "to", "do", "the", "same", "thing", "inside", "two", "different", "exceptions", "the", "best", "I", "can", "think", "of", "right", "now", "is", "to", "do", "this", "theIs", "there", "any", "way", "that", "I", "can", "do", "something", "like", "this", "since", "the", "action", "to", "take", "in", "both", "exceptions", "is", "to", "the", "theNow", "this", "really", "won", "t", "work", "as", "it", "matches", "the", "syntax", "for", "theSo", "my", "effort", "to", "catch", "the", "two", "distinct", "exceptions", "doesn", "t", "exactly", "come", "through", "theIs", "there", "a", "way", "to", "do", "this"], "title": "Catch multiple exceptions in one line (except block)"},
{"url": "https://stackoverflow.com/questions/379906/how-do-i-parse-a-string-to-a-float-or-int-in-python", "tags": ["python", "parsing", "floating-point", "type-conversion", "integer"], "question": ["In", "Python", "how", "can", "I", "parse", "a", "numeric", "string", "like", "the", "to", "its", "corresponding", "float", "value", "the", "Or", "parse", "the", "string", "the", "to", "an", "integer", "the", "theI", "just", "want", "to", "know", "how", "to", "parse", "a", "the", "the", "to", "a", "the", "and", "separately", "an", "the", "the", "to", "an", "the"], "title": "How do I parse a string to a float or int in Python?"},
{"url": "https://stackoverflow.com/questions/101754/is-there-a-way-to-run-python-on-android", "tags": ["android", "python", "jython", "ase", "android-scripting"], "question": ["We", "are", "working", "on", "an", "the", "version", "and", "this", "platform", "has", "a", "nice", "Python", "API", "theHowever", "there", "is", "nothing", "official", "about", "Python", "on", "Android", "but", "since", "the", "exists", "is", "there", "a", "way", "to", "let", "the", "snake", "and", "the", "robot", "work", "together"], "title": "Is there a way to run Python on Android? [closed]"},
{"url": "https://stackoverflow.com/questions/576169/understanding-python-super-with-init-methods", "tags": ["python", "class", "oop", "inheritance", "super", "python"], "question": ["This", "question", "already", "has", "an", "answer", "here", "theI", "m", "trying", "to", "understand", "the", "use", "of", "the", "From", "the", "looks", "of", "it", "both", "child", "classes", "can", "be", "created", "just", "fine", "theI", "m", "curious", "to", "know", "about", "the", "actual", "difference", "between", "the", "following", "2", "child", "classes"], "title": "Understanding Python super() with __init__() methods [duplicate]"},
{"url": "https://stackoverflow.com/questions/415511/how-to-get-the-current-time-in-python", "tags": ["python", "datetime", "time"], "question": ["What", "is", "the", "module", "method", "used", "to", "get", "the", "current", "time"], "title": "How to get the current time in Python"},
{"url": "https://stackoverflow.com/questions/1024847/add-new-keys-to-a-dictionary", "tags": ["python", "dictionary"], "question": ["Is", "it", "possible", "to", "add", "a", "key", "to", "a", "Python", "dictionary", "after", "it", "has", "been", "created", "It", "doesn", "t", "seem", "to", "have", "an", "the", "method"], "title": "Add new keys to a dictionary?"},
{"url": "https://stackoverflow.com/questions/6996603/how-to-delete-a-file-or-folder", "tags": ["python", "file-io", "folder", "delete-file"], "question": ["How", "do", "I", "delete", "a", "file", "or", "folder", "in", "Python"], "title": "How to delete a file or folder"},
{"url": "https://stackoverflow.com/questions/9371238/why-is-reading-lines-from-stdin-much-slower-in-c-than-python", "tags": ["c++", "python", "benchmarking", "readline", "getline"], "question": ["I", "wanted", "to", "compare", "reading", "lines", "of", "string", "input", "from", "stdin", "using", "Python", "and", "C", "and", "was", "shocked", "to", "see", "my", "C", "code", "run", "an", "order", "of", "magnitude", "slower", "than", "the", "equivalent", "Python", "code", "Since", "my", "C", "is", "rusty", "and", "I", "m", "not", "yet", "an", "expert", "Pythonista", "please", "tell", "me", "if", "I", "m", "doing", "something", "wrong", "or", "if", "I", "m", "misunderstanding", "something", "the", "TLDR", "answer", "include", "the", "statement", "the", "or", "just", "use", "the", "instead", "theTLDR", "results", "scroll", "all", "the", "way", "down", "to", "the", "bottom", "of", "my", "question", "and", "look", "at", "the", "table", "the", "the", "theOkay", "I", "tried", "J", "N", "s", "suggestion", "of", "trying", "having", "Python", "store", "the", "line", "read", "but", "it", "made", "no", "difference", "to", "python", "s", "speed", "theI", "also", "tried", "J", "N", "s", "suggestion", "of", "using", "the", "into", "a", "the", "array", "instead", "of", "the", "into", "a", "the", "Bingo", "This", "resulted", "in", "equivalent", "performance", "for", "both", "Python", "and", "C", "3", "333", "333", "LPS", "with", "my", "input", "data", "which", "by", "the", "way", "are", "just", "short", "lines", "of", "three", "fields", "each", "usually", "about", "20", "characters", "wide", "though", "sometimes", "more", "theCode", "theSpeed", "the", "Yes", "I", "ran", "it", "several", "times", "So", "I", "guess", "I", "will", "now", "use", "the", "instead", "of", "the", "But", "I", "m", "still", "curious", "if", "people", "think", "this", "performance", "hit", "from", "the", "the", "is", "typical", "and", "reasonable", "theAdding", "theImmediately", "above", "my", "original", "while", "loop", "above", "results", "in", "code", "that", "runs", "faster", "than", "Python", "the", "this", "is", "on", "my", "2011", "MacBook", "Pro", "using", "the", "original", "code", "the", "original", "with", "the", "sync", "disabled", "and", "the", "original", "Python", "code", "respectively", "on", "a", "file", "with", "20M", "lines", "of", "text", "Yes", "I", "ran", "it", "several", "times", "to", "eliminate", "disk", "caching", "confound", "theThanks", "to", "Vaughn", "Cato", "for", "his", "answer", "the", "-", "theAs", "suggested", "by", "Gandalf", "The", "Gray", "below", "the", "is", "even", "faster", "than", "the", "or", "the", "unsynchronized", "the", "approach", "I", "also", "learned", "that", "the", "and", "the", "are", "both", "UNSAFE", "and", "should", "NOT", "BE", "USED", "due", "to", "potential", "of", "buffer", "overflow", "So", "I", "wrote", "this", "iteration", "using", "the", "the", "safer", "alternative", "to", "gets", "Here", "are", "the", "pertinent", "lines", "for", "my", "fellow", "noobs", "theNow", "here", "are", "the", "results", "using", "an", "even", "larger", "file", "100M", "lines", "3", "4", "GB", "on", "a", "fast", "server", "with", "very", "fast", "disk", "comparing", "the", "Python", "code", "the", "unsynchronised", "the", "and", "the", "the", "approaches", "as", "well", "as", "comparing", "with", "the", "wc", "utility", "The", "the", "version", "segmentation", "faulted", "and", "I", "don", "t", "feel", "like", "troubleshooting", "it", "theAs", "you", "can", "see", "the", "is", "better", "but", "still", "pretty", "far", "from", "wc", "performance", "I", "m", "pretty", "sure", "this", "is", "due", "to", "the", "fact", "that", "wc", "examines", "each", "character", "without", "any", "memory", "copying", "I", "suspect", "that", "at", "this", "point", "other", "parts", "of", "the", "code", "will", "become", "the", "bottleneck", "so", "I", "don", "t", "think", "optimizing", "to", "that", "level", "would", "even", "be", "worthwhile", "even", "if", "possible", "since", "after", "all", "I", "actually", "need", "to", "store", "the", "read", "lines", "in", "memory", "theAlso", "note", "that", "a", "small", "tradeoff", "with", "using", "a", "the", "buffer", "and", "the", "vs", "unsynchronised", "the", "to", "string", "is", "that", "the", "latter", "can", "read", "lines", "of", "any", "length", "while", "the", "former", "requires", "limiting", "input", "to", "some", "finite", "number", "In", "practice", "this", "is", "probably", "a", "non-issue", "for", "reading", "most", "line-based", "input", "files", "as", "the", "buffer", "can", "be", "set", "to", "a", "very", "large", "value", "that", "would", "not", "be", "exceeded", "by", "valid", "input", "theThis", "has", "been", "educational", "Thanks", "to", "all", "for", "your", "comments", "and", "suggestions", "theAs", "suggested", "by", "J", "F", "Sebastian", "in", "the", "comments", "below", "the", "GNU", "wc", "utility", "uses", "plain", "C", "the", "within", "the", "safe-read", "c", "wrapper", "to", "read", "chunks", "of", "16k", "bytes", "at", "a", "time", "and", "count", "new", "lines", "Here", "s", "a", "Python", "equivalent", "based", "on", "J", "F", "s", "code", "just", "showing", "the", "relevant", "snippet", "that", "replaces", "the", "Python", "the", "loop", "theThe", "performance", "of", "this", "version", "is", "quite", "fast", "though", "still", "a", "bit", "slower", "than", "the", "raw", "C", "wc", "utility", "of", "course", "theAgain", "it", "s", "a", "bit", "silly", "for", "me", "to", "compare", "C", "the", "the", "and", "the", "first", "python", "code", "on", "the", "one", "hand", "to", "the", "and", "this", "last", "Python", "snippet", "on", "the", "other", "as", "the", "latter", "two", "don", "t", "actually", "store", "the", "read", "lines", "but", "merely", "count", "newlines", "Still", "it", "s", "interesting", "to", "explore", "all", "the", "different", "implementations", "and", "think", "about", "the", "performance", "implications", "Thanks", "again", "theFor", "completeness", "I", "thought", "I", "d", "update", "the", "read", "speed", "for", "the", "same", "file", "on", "the", "same", "box", "with", "the", "original", "synced", "C", "code", "Again", "this", "is", "for", "a", "100M", "line", "file", "on", "a", "fast", "disk", "Here", "s", "the", "complete", "table", "now"], "title": "Why is reading lines from stdin much slower in C++ than Python?"},
{"url": "https://stackoverflow.com/questions/466345/converting-string-into-datetime", "tags": ["python", "datetime"], "question": ["Short", "and", "simple", "I", "ve", "got", "a", "huge", "list", "of", "date-times", "like", "this", "as", "strings", "theI", "m", "going", "to", "be", "shoving", "these", "back", "into", "proper", "datetime", "fields", "in", "a", "database", "so", "I", "need", "to", "magic", "them", "into", "real", "datetime", "objects", "theAny", "help", "even", "if", "it", "s", "just", "a", "kick", "in", "the", "right", "direction", "would", "be", "appreciated", "theEdit", "This", "is", "going", "through", "Django", "s", "ORM", "so", "I", "can", "t", "use", "SQL", "to", "do", "the", "conversion", "on", "insert"], "title": "Converting string into datetime"},
{"url": "https://stackoverflow.com/questions/5137497/find-current-directory-and-files-directory", "tags": ["python", "directory", "python"], "question": ["This", "question", "already", "has", "an", "answer", "here", "theIn", "Python", "what", "commands", "can", "I", "use", "to", "find"], "title": "Find current directory and file's directory [duplicate]"},
{"url": "https://stackoverflow.com/questions/2052390/manually-raising-throwing-an-exception-in-python", "tags": ["python", "exception", "exception-handling"], "question": ["How", "can", "I", "raise", "an", "exception", "in", "Python", "so", "that", "it", "can", "later", "be", "caught", "via", "an", "the", "block"], "title": "Manually raising (throwing) an exception in Python"},
{"url": "https://stackoverflow.com/questions/6797984/how-to-convert-string-to-lowercase-in-python", "tags": ["python", "string", "unicode", "uppercase", "lowercase"], "question": ["Is", "there", "a", "way", "to", "convert", "a", "string", "from", "uppercase", "or", "even", "part", "uppercase", "to", "lowercase", "theE", "g", "Kilometers", "--", "kilometers"], "title": "How to convert string to lowercase in Python"},
{"url": "https://stackoverflow.com/questions/101268/hidden-features-of-python", "tags": ["python", "hidden-features"], "question": ["What", "are", "the", "lesser-known", "but", "useful", "features", "of", "the", "Python", "programming", "language"], "title": "Hidden features of Python [closed]"},
{"url": "https://stackoverflow.com/questions/510348/how-can-i-make-a-time-delay-in-python", "tags": ["python", "delay", "sleep", "timedelay"], "question": ["I", "would", "like", "to", "know", "how", "to", "put", "a", "time", "delay", "in", "a", "Python", "script"], "title": "How can I make a time delay in Python?"},
{"url": "https://stackoverflow.com/questions/952914/making-a-flat-list-out-of-list-of-lists-in-python", "tags": ["python", "list", "multidimensional-array", "flatten"], "question": ["I", "wonder", "whether", "there", "is", "a", "shortcut", "to", "make", "a", "simple", "list", "out", "of", "list", "of", "lists", "in", "Python", "theI", "can", "do", "that", "in", "a", "for", "loop", "but", "maybe", "there", "is", "some", "cool", "one-liner", "I", "tried", "it", "with", "the", "but", "I", "get", "an", "error"], "title": "Making a flat list out of list of lists in Python"},
{"url": "https://stackoverflow.com/questions/3294889/iterating-over-dictionaries-using-for-loops", "tags": ["python", "python-2.7", "dictionary"], "question": ["I", "am", "a", "bit", "puzzled", "by", "the", "following", "code", "theWhat", "I", "don", "t", "understand", "is", "the", "the", "portion", "How", "does", "Python", "recognize", "that", "it", "needs", "only", "to", "read", "the", "key", "from", "the", "dictionary", "Is", "the", "a", "special", "word", "in", "Python", "Or", "is", "it", "simply", "a", "variable"], "title": "Iterating over dictionaries using 'for' loops"},
{"url": "https://stackoverflow.com/questions/1436703/difference-between-str-and-repr", "tags": ["python", "magic-methods", "repr"], "question": ["What", "is", "the", "difference", "between", "the", "and", "the", "in", "the"], "title": "Difference between __str__ and __repr__?"},
{"url": "https://stackoverflow.com/questions/68645/are-static-class-variables-possible", "tags": ["python", "class", "methods", "static", "class-variables"], "question": ["Is", "it", "possible", "to", "have", "static", "class", "variables", "or", "methods", "in", "python", "What", "syntax", "is", "required", "to", "do", "this"], "title": "Are static class variables possible?"},
{"url": "https://stackoverflow.com/questions/986006/how-do-i-pass-a-variable-by-reference", "tags": ["python", "reference", "parameter-passing", "pass-by-reference"], "question": ["The", "Python", "documentation", "seems", "unclear", "about", "whether", "parameters", "are", "passed", "by", "reference", "or", "value", "and", "the", "following", "code", "produces", "the", "unchanged", "value", "Original", "theIs", "there", "something", "I", "can", "do", "to", "pass", "the", "variable", "by", "actual", "reference"], "title": "How do I pass a variable by reference?"},
{"url": "https://stackoverflow.com/questions/1602934/check-if-a-given-key-already-exists-in-a-dictionary", "tags": ["python", "dictionary"], "question": ["I", "wanted", "to", "test", "if", "a", "key", "exists", "in", "a", "dictionary", "before", "updating", "the", "value", "for", "the", "key", "I", "wrote", "the", "following", "code", "theI", "think", "this", "is", "not", "the", "best", "way", "to", "accomplish", "this", "task", "Is", "there", "a", "better", "way", "to", "test", "for", "a", "key", "in", "the", "dictionary"], "title": "Check if a given key already exists in a dictionary"},
{"url": "https://stackoverflow.com/questions/176918/finding-the-index-of-an-item-given-a-list-containing-it-in-python", "tags": ["python", "list"], "question": ["For", "a", "list", "the", "and", "an", "item", "in", "the", "list", "the", "how", "do", "I", "get", "its", "index", "1", "in", "Python"], "title": "Finding the index of an item given a list containing it in Python"},
{"url": "https://stackoverflow.com/questions/739654/how-to-make-a-chain-of-function-decorators", "tags": ["python", "decorator", "python-decorators"], "question": ["How", "can", "I", "make", "two", "decorators", "in", "Python", "that", "would", "do", "the", "following", "the", "which", "should", "return", "theI", "m", "not", "trying", "to", "make", "the", "this", "way", "in", "a", "real", "application", "-", "just", "trying", "to", "understand", "how", "decorators", "and", "decorator", "chaining", "works"], "title": "How to make a chain of function decorators?"},
{"url": "https://stackoverflow.com/questions/423379/using-global-variables-in-a-function", "tags": ["python", "global-variables", "scope"], "question": ["How", "can", "I", "create", "or", "use", "a", "global", "variable", "in", "a", "function", "theIf", "I", "create", "a", "global", "variable", "in", "one", "function", "how", "can", "I", "use", "that", "global", "variable", "in", "another", "function", "Do", "I", "need", "to", "store", "the", "global", "variable", "in", "a", "local", "variable", "of", "the", "function", "which", "needs", "its", "access"], "title": "Using global variables in a function"},
{"url": "https://stackoverflow.com/questions/509211/understanding-pythons-slice-notation", "tags": ["python", "list", "slice"], "question": ["I", "need", "a", "good", "explanation", "references", "are", "a", "plus", "on", "Python", "s", "slice", "notation", "theTo", "me", "this", "notation", "needs", "a", "bit", "of", "picking", "up", "theIt", "looks", "extremely", "powerful", "but", "I", "haven", "t", "quite", "got", "my", "head", "around", "it"], "title": "Understanding Python's slice notation"},
{"url": "https://stackoverflow.com/questions/1132941/least-astonishment-and-the-mutable-default-argument", "tags": ["python", "language-design", "least-astonishment"], "question": ["Anyone", "tinkering", "with", "Python", "long", "enough", "has", "been", "bitten", "or", "torn", "to", "pieces", "by", "the", "following", "issue", "thePython", "novices", "would", "expect", "this", "function", "to", "always", "return", "a", "list", "with", "only", "one", "element", "the", "The", "result", "is", "instead", "very", "different", "and", "very", "astonishing", "for", "a", "novice", "theA", "manager", "of", "mine", "once", "had", "his", "first", "encounter", "with", "this", "feature", "and", "called", "it", "a", "dramatic", "design", "flaw", "of", "the", "language", "I", "replied", "that", "the", "behavior", "had", "an", "underlying", "explanation", "and", "it", "is", "indeed", "very", "puzzling", "and", "unexpected", "if", "you", "don", "t", "understand", "the", "internals", "However", "I", "was", "not", "able", "to", "answer", "to", "myself", "the", "following", "question", "what", "is", "the", "reason", "for", "binding", "the", "default", "argument", "at", "function", "definition", "and", "not", "at", "function", "execution", "I", "doubt", "the", "experienced", "behavior", "has", "a", "practical", "use", "who", "really", "used", "static", "variables", "in", "C", "without", "breeding", "bugs", "the", "theBaczek", "made", "an", "interesting", "example", "Together", "with", "most", "of", "your", "comments", "and", "Utaal", "s", "in", "particular", "I", "elaborated", "further", "theTo", "me", "it", "seems", "that", "the", "design", "decision", "was", "relative", "to", "where", "to", "put", "the", "scope", "of", "parameters", "inside", "the", "function", "or", "together", "with", "it", "theDoing", "the", "binding", "inside", "the", "function", "would", "mean", "that", "the", "is", "effectively", "bound", "to", "the", "specified", "default", "when", "the", "function", "is", "called", "not", "defined", "something", "that", "would", "present", "a", "deep", "flaw", "the", "the", "line", "would", "be", "hybrid", "in", "the", "sense", "that", "part", "of", "the", "binding", "of", "the", "function", "object", "would", "happen", "at", "definition", "and", "part", "assignment", "of", "default", "parameters", "at", "function", "invocation", "time", "theThe", "actual", "behavior", "is", "more", "consistent", "everything", "of", "that", "line", "gets", "evaluated", "when", "that", "line", "is", "executed", "meaning", "at", "function", "definition"], "title": "\u201cLeast Astonishment\u201d and the Mutable Default Argument"},
{"url": "https://stackoverflow.com/questions/252703/difference-between-append-vs-extend-list-methods-in-python", "tags": ["python", "list", "data-structures", "append", "extend"], "question": ["What", "s", "the", "difference", "between", "the", "list", "methods", "the", "and", "the"], "title": "Difference between append vs. extend list methods in Python"},
{"url": "https://stackoverflow.com/questions/4750806/how-do-i-install-pip-on-windows", "tags": ["python", "windows", "installation", "pip", "easy-install"], "question": ["is", "a", "replacement", "for", "the", "But", "should", "I", "install", "the", "using", "the", "on", "Windows", "Is", "there", "a", "better", "way"], "title": "How do I install pip on Windows?"},
{"url": "https://stackoverflow.com/questions/522563/accessing-the-index-in-for-loops", "tags": ["python", "loops", "list"], "question": ["How", "do", "I", "access", "the", "index", "itself", "for", "a", "list", "like", "the", "following", "theWhen", "I", "loop", "through", "it", "using", "a", "the", "loop", "how", "do", "I", "access", "the", "loop", "index", "from", "1", "to", "5", "in", "this", "case"], "title": "Accessing the index in 'for' loops?"},
{"url": "https://stackoverflow.com/questions/53513/how-do-i-check-if-a-list-is-empty", "tags": ["python", "list"], "question": ["For", "example", "if", "passed", "the", "following", "theHow", "do", "I", "check", "to", "see", "if", "the", "is", "empty"], "title": "How do I check if a list is empty?"},
{"url": "https://stackoverflow.com/questions/136097/what-is-the-difference-between-staticmethod-and-classmethod-in-python", "tags": ["python", "oop", "methods", "python-decorators"], "question": ["What", "is", "the", "difference", "between", "a", "function", "decorated", "with", "the", "and", "one", "decorated", "with", "the"], "title": "What is the difference between @staticmethod and @classmethod in Python?"},
{"url": "https://stackoverflow.com/questions/613183/how-do-i-sort-a-dictionary-by-value", "tags": ["python", "sorting", "dictionary"], "question": ["I", "have", "a", "dictionary", "of", "values", "read", "from", "two", "fields", "in", "a", "database", "a", "string", "field", "and", "a", "numeric", "field", "The", "string", "field", "is", "unique", "so", "that", "is", "the", "key", "of", "the", "dictionary", "theI", "can", "sort", "on", "the", "keys", "but", "how", "can", "I", "sort", "based", "on", "the", "values", "theNote", "I", "have", "read", "Stack", "Overflow", "question", "the", "and", "probably", "could", "change", "my", "code", "to", "have", "a", "list", "of", "dictionaries", "but", "since", "I", "do", "not", "really", "need", "a", "list", "of", "dictionaries", "I", "wanted", "to", "know", "if", "there", "is", "a", "simpler", "solution"], "title": "How do I sort a dictionary by value?"},
{"url": "https://stackoverflow.com/questions/38987/how-to-merge-two-dictionaries-in-a-single-expression", "tags": ["python", "python-3.x", "dictionary", "mapping", "idioms"], "question": ["I", "have", "two", "Python", "dictionaries", "and", "I", "want", "to", "write", "a", "single", "expression", "that", "returns", "these", "two", "dictionaries", "merged", "The", "the", "method", "would", "be", "what", "I", "need", "if", "it", "returned", "its", "result", "instead", "of", "modifying", "a", "dict", "in-place", "theHow", "can", "I", "get", "that", "final", "merged", "dict", "in", "the", "not", "the", "the", "To", "be", "extra-clear", "the", "last-one-wins", "conflict-handling", "of", "the", "is", "what", "I", "m", "looking", "for", "as", "well"], "title": "How to merge two dictionaries in a single expression?"},
{"url": "https://stackoverflow.com/questions/273192/how-can-i-safely-create-a-nested-directory-in-python", "tags": ["python", "exception", "path", "directory", "operating-system"], "question": ["What", "is", "the", "most", "elegant", "way", "to", "check", "if", "the", "directory", "a", "file", "is", "going", "to", "be", "written", "to", "exists", "and", "if", "not", "create", "the", "directory", "using", "Python", "Here", "is", "what", "I", "tried", "theSomehow", "I", "missed", "the", "thanks", "kanja", "Blair", "and", "Douglas", "This", "is", "what", "I", "have", "now", "theIs", "there", "a", "flag", "for", "open", "that", "makes", "this", "happen", "automatically"], "title": "How can I safely create a nested directory in Python?"},
{"url": "https://stackoverflow.com/questions/419163/what-does-if-name-main-do", "tags": ["python", "namespaces", "main", "python-module", "idioms"], "question": ["What", "does", "the", "the", "do"], "title": "What does if __name__ == \u201c__main__\u201d: do?"},
{"url": "https://stackoverflow.com/questions/89228/calling-an-external-command-in-python", "tags": ["python", "shell", "command", "subprocess", "external"], "question": ["How", "can", "I", "call", "an", "external", "command", "as", "if", "I", "d", "typed", "it", "at", "the", "Unix", "shell", "or", "Windows", "command", "prompt", "from", "within", "a", "Python", "script"], "title": "Calling an external command in Python"},
{"url": "https://stackoverflow.com/questions/3437059/does-python-have-a-string-contains-substring-method", "tags": ["python", "string", "substring", "contains"], "question": ["I", "m", "looking", "for", "a", "the", "or", "the", "method", "in", "Python", "theI", "want", "to", "do"], "title": "Does Python have a string 'contains' substring method?"},
{"url": "https://stackoverflow.com/questions/3207219/how-do-i-list-all-files-of-a-directory", "tags": ["python", "directory"], "question": ["How", "can", "I", "list", "all", "files", "of", "a", "directory", "in", "Python", "and", "add", "them", "to", "a", "the"], "title": "How do I list all files of a directory?"},
{"url": "https://stackoverflow.com/questions/100003/what-are-metaclasses-in-python", "tags": ["python", "oop", "metaclass", "python-datamodel"], "question": ["What", "are", "metaclasses", "and", "what", "do", "we", "use", "them", "for"], "title": "What are metaclasses in Python?"},
{"url": "https://stackoverflow.com/questions/394809/does-python-have-a-ternary-conditional-operator", "tags": ["python", "operators", "ternary-operator", "conditional-operator", "python-2.5"], "question": ["If", "Python", "does", "not", "have", "a", "ternary", "conditional", "operator", "is", "it", "possible", "to", "simulate", "one", "using", "other", "language", "constructs"], "title": "Does Python have a ternary conditional operator?"},
{"url": "https://stackoverflow.com/questions/82831/how-do-i-check-whether-a-file-exists", "tags": ["python", "file"], "question": ["How", "do", "I", "see", "if", "a", "file", "exists", "or", "not", "without", "using", "the", "the", "statement"], "title": "How do I check whether a file exists?"}
][
{"url": "https://stackoverflow.com/questions/231767/what-does-the-yield-keyword-do", "tags": ["python", "iterator", "generator", "yield", "coroutine"], "question": ["use", "keyword", "Python", "theFor", "example", "trying", "understand", "codethe", "theAnd", "caller", "theWhat", "happens", "method", "called", "list", "returned", "single", "element", "called", "subsequent", "calls", "stop"], "title": "What does the \u201cyield\u201d keyword do?"},
{"url": "https://stackoverflow.com/questions/17271319/how-do-i-install-pip-on-macos-or-os-x", "tags": ["python", "macos", "pip", "install"], "question": ["spent", "day", "yesterday", "searching", "clear", "answer", "installing", "package", "manager", "Python", "find", "good", "solution", "theHow", "install"], "title": "How do I install pip on macOS or OS X?"},
{"url": "https://stackoverflow.com/questions/663171/is-there-a-way-to-substring-a-string-in-python", "tags": ["python", "string"], "question": ["way", "substring", "string", "Python", "get", "new", "string", "3rd", "character", "end", "string", "theMaybe", "like", "theIf", "leaving", "second", "part", "means", "till", "end", "leave", "first", "part", "start", "start"], "title": "Is there a way to substring a string in Python?"},
{"url": "https://stackoverflow.com/questions/1720421/how-to-concatenate-two-lists-in-python", "tags": ["python", "list"], "question": ["concatenate", "two", "lists", "Python", "theExample", "theExpected", "outcome"], "title": "How to concatenate two lists in Python?"},
{"url": "https://stackoverflow.com/questions/36901/what-does-double-star-asterisk-and-star-asterisk-do-for-parameters", "tags": ["python", "syntax", "parameter-passing", "identifier", "kwargs"], "question": ["following", "method", "definitions"], "title": "What does ** (double star/asterisk) and * (star/asterisk) do for parameters?"},
{"url": "https://stackoverflow.com/questions/1712227/how-to-get-the-number-of-elements-in-a-list-in-python", "tags": ["python", "list"], "question": ["get", "number", "elements", "list"], "title": "How to get the number of elements in a list in Python?"},
{"url": "https://stackoverflow.com/questions/379906/how-do-i-parse-a-string-to-a-float-or-int-in-python", "tags": ["python", "parsing", "floating-point", "type-conversion", "integer"], "question": ["Python", "parse", "numeric", "string", "like", "corresponding", "float", "value", "parse", "string", "integer", "theI", "want", "know", "parse", "separately"], "title": "How do I parse a string to a float or int in Python?"},
{"url": "https://stackoverflow.com/questions/1024847/add-new-keys-to-a-dictionary", "tags": ["python", "dictionary"], "question": ["possible", "add", "key", "Python", "dictionary", "created", "seem", "method"], "title": "Add new keys to a dictionary?"},
{"url": "https://stackoverflow.com/questions/3277503/in-python-how-do-i-read-a-file-line-by-line-into-a-list", "tags": ["python", "string", "file", "readlines"], "question": ["read", "every", "line", "file", "Python", "store", "line", "element", "list", "theI", "want", "read", "file", "line", "line", "append", "line", "end", "list"], "title": "In Python, how do I read a file line-by-line into a list?"},
{"url": "https://stackoverflow.com/questions/101754/is-there-a-way-to-run-python-on-android", "tags": ["android", "python", "jython", "ase", "android-scripting"], "question": ["working", "version", "platform", "nice", "Python", "API", "theHowever", "nothing", "official", "Python", "Android", "since", "exists", "way", "let", "snake", "robot", "work", "together"], "title": "Is there a way to run Python on Android? [closed]"},
{"url": "https://stackoverflow.com/questions/312443/how-do-you-split-a-list-into-evenly-sized-chunks", "tags": ["python", "list", "split", "chunks"], "question": ["list", "arbitrary", "length", "need", "split", "equal", "size", "chunks", "operate", "obvious", "ways", "like", "keeping", "counter", "two", "lists", "second", "list", "fills", "add", "first", "list", "empty", "second", "list", "next", "round", "data", "potentially", "extremely", "expensive", "theI", "wondering", "anyone", "good", "solution", "lists", "length", "e", "g", "using", "generators", "theI", "looking", "something", "useful", "find", "anything", "obviously", "useful", "Might", "missed", "though", "theRelated", "question"], "title": "How do you split a list into evenly sized chunks?"},
{"url": "https://stackoverflow.com/questions/2612802/how-to-clone-or-copy-a-list", "tags": ["python", "list", "copy", "clone"], "question": ["options", "clone", "copy", "list", "Python", "theUsing", "modifies", "every", "time", "changes"], "title": "How to clone or copy a list?"},
{"url": "https://stackoverflow.com/questions/6470428/catch-multiple-exceptions-in-one-line-except-block", "tags": ["python", "exception", "exception-handling"], "question": ["know", "theI", "also", "theBut", "want", "thing", "inside", "two", "different", "exceptions", "best", "think", "right", "theIs", "way", "something", "like", "since", "action", "take", "exceptions", "theNow", "really", "work", "matches", "syntax", "theSo", "effort", "catch", "two", "distinct", "exceptions", "exactly", "come", "theIs", "way"], "title": "Catch multiple exceptions in one line (except block)"},
{"url": "https://stackoverflow.com/questions/576169/understanding-python-super-with-init-methods", "tags": ["python", "class", "oop", "inheritance", "super", "python"], "question": ["question", "already", "answer", "theI", "trying", "understand", "use", "looks", "child", "classes", "created", "fine", "theI", "curious", "know", "actual", "difference", "following", "2", "child", "classes"], "title": "Understanding Python super() with __init__() methods [duplicate]"},
{"url": "https://stackoverflow.com/questions/415511/how-to-get-the-current-time-in-python", "tags": ["python", "datetime", "time"], "question": ["module", "method", "used", "get", "current", "time"], "title": "How to get the current time in Python"},
{"url": "https://stackoverflow.com/questions/510348/how-can-i-make-a-time-delay-in-python", "tags": ["python", "delay", "sleep", "timedelay"], "question": ["would", "like", "know", "put", "time", "delay", "Python", "script"], "title": "How can I make a time delay in Python?"},
{"url": "https://stackoverflow.com/questions/5137497/find-current-directory-and-files-directory", "tags": ["python", "directory", "python"], "question": ["question", "already", "answer", "theIn", "Python", "commands", "use", "find"], "title": "Find current directory and file's directory [duplicate]"},
{"url": "https://stackoverflow.com/questions/6797984/how-to-convert-string-to-lowercase-in-python", "tags": ["python", "string", "unicode", "uppercase", "lowercase"], "question": ["way", "convert", "string", "uppercase", "even", "part", "uppercase", "lowercase", "theE", "g", "Kilometers", "--", "kilometers"], "title": "How to convert string to lowercase in Python"},
{"url": "https://stackoverflow.com/questions/101268/hidden-features-of-python", "tags": ["python", "hidden-features"], "question": ["lesser-known", "useful", "features", "Python", "programming", "language"], "title": "Hidden features of Python [closed]"},
{"url": "https://stackoverflow.com/questions/6996603/how-to-delete-a-file-or-folder", "tags": ["python", "file-io", "folder", "delete-file"], "question": ["delete", "file", "folder", "Python"], "title": "How to delete a file or folder"},
{"url": "https://stackoverflow.com/questions/2052390/manually-raising-throwing-an-exception-in-python", "tags": ["python", "exception", "exception-handling"], "question": ["raise", "exception", "Python", "later", "caught", "via", "block"], "title": "Manually raising (throwing) an exception in Python"},
{"url": "https://stackoverflow.com/questions/287871/print-in-terminal-with-colors", "tags": ["python", "unicode", "terminal", "ansi-colors"], "question": ["output", "colored", "text", "terminal", "Python", "best", "Unicode", "symbol", "represent", "solid", "block"], "title": "Print in terminal with colors?"},
{"url": "https://stackoverflow.com/questions/466345/converting-string-into-datetime", "tags": ["python", "datetime"], "question": ["Short", "simple", "got", "huge", "list", "date-times", "like", "strings", "theI", "going", "shoving", "back", "proper", "datetime", "fields", "database", "need", "magic", "real", "datetime", "objects", "theAny", "help", "even", "kick", "right", "direction", "would", "appreciated", "theEdit", "going", "Django", "ORM", "use", "SQL", "conversion", "insert"], "title": "Converting string into datetime"},
{"url": "https://stackoverflow.com/questions/68645/are-static-class-variables-possible", "tags": ["python", "class", "methods", "static", "class-variables"], "question": ["possible", "static", "class", "variables", "methods", "python", "syntax", "required"], "title": "Are static class variables possible?"},
{"url": "https://stackoverflow.com/questions/952914/making-a-flat-list-out-of-list-of-lists-in-python", "tags": ["python", "list", "multidimensional-array", "flatten"], "question": ["wonder", "whether", "shortcut", "make", "simple", "list", "list", "lists", "Python", "theI", "loop", "maybe", "cool", "one-liner", "tried", "get", "error"], "title": "Making a flat list out of list of lists in Python"},
{"url": "https://stackoverflow.com/questions/1436703/difference-between-str-and-repr", "tags": ["python", "magic-methods", "repr"], "question": ["difference"], "title": "Difference between __str__ and __repr__?"},
{"url": "https://stackoverflow.com/questions/9371238/why-is-reading-lines-from-stdin-much-slower-in-c-than-python", "tags": ["c++", "python", "benchmarking", "readline", "getline"], "question": ["wanted", "compare", "reading", "lines", "string", "input", "stdin", "using", "Python", "C", "shocked", "see", "C", "code", "run", "order", "magnitude", "slower", "equivalent", "Python", "code", "Since", "C", "rusty", "yet", "expert", "Pythonista", "please", "tell", "something", "wrong", "misunderstanding", "something", "TLDR", "answer", "include", "statement", "use", "instead", "theTLDR", "results", "scroll", "way", "bottom", "question", "look", "table", "theOkay", "tried", "J", "N", "suggestion", "trying", "Python", "store", "line", "read", "made", "difference", "python", "speed", "theI", "also", "tried", "J", "N", "suggestion", "using", "array", "instead", "Bingo", "resulted", "equivalent", "performance", "Python", "C", "3", "333", "333", "LPS", "input", "data", "way", "short", "lines", "three", "fields", "usually", "20", "characters", "wide", "though", "sometimes", "theCode", "theSpeed", "Yes", "ran", "several", "times", "guess", "use", "instead", "still", "curious", "people", "think", "performance", "hit", "typical", "reasonable", "theAdding", "theImmediately", "original", "loop", "results", "code", "runs", "faster", "Python", "2011", "MacBook", "Pro", "using", "original", "code", "original", "sync", "disabled", "original", "Python", "code", "respectively", "file", "20M", "lines", "text", "Yes", "ran", "several", "times", "eliminate", "disk", "caching", "confound", "theThanks", "Vaughn", "Cato", "answer", "-", "theAs", "suggested", "Gandalf", "Gray", "even", "faster", "unsynchronized", "approach", "also", "learned", "UNSAFE", "USED", "due", "potential", "buffer", "overflow", "wrote", "iteration", "using", "safer", "alternative", "gets", "pertinent", "lines", "fellow", "noobs", "theNow", "results", "using", "even", "larger", "file", "100M", "lines", "3", "4", "GB", "fast", "server", "fast", "disk", "comparing", "Python", "code", "unsynchronised", "approaches", "well", "comparing", "wc", "utility", "version", "segmentation", "faulted", "feel", "like", "troubleshooting", "theAs", "see", "better", "still", "pretty", "far", "wc", "performance", "pretty", "sure", "due", "fact", "wc", "examines", "character", "without", "memory", "copying", "suspect", "point", "parts", "code", "become", "bottleneck", "think", "optimizing", "level", "would", "even", "worthwhile", "even", "possible", "since", "actually", "need", "store", "read", "lines", "memory", "theAlso", "note", "small", "tradeoff", "using", "buffer", "vs", "unsynchronised", "string", "latter", "read", "lines", "length", "former", "requires", "limiting", "input", "finite", "number", "practice", "probably", "non-issue", "reading", "line-based", "input", "files", "buffer", "set", "large", "value", "would", "exceeded", "valid", "input", "theThis", "educational", "Thanks", "comments", "suggestions", "theAs", "suggested", "J", "F", "Sebastian", "comments", "GNU", "wc", "utility", "uses", "plain", "C", "within", "safe-read", "c", "wrapper", "read", "chunks", "16k", "bytes", "time", "count", "new", "lines", "Python", "equivalent", "based", "J", "F", "code", "showing", "relevant", "snippet", "replaces", "Python", "loop", "theThe", "performance", "version", "quite", "fast", "though", "still", "bit", "slower", "raw", "C", "wc", "utility", "course", "theAgain", "bit", "silly", "compare", "C", "first", "python", "code", "one", "hand", "last", "Python", "snippet", "latter", "two", "actually", "store", "read", "lines", "merely", "count", "newlines", "Still", "interesting", "explore", "different", "implementations", "think", "performance", "implications", "Thanks", "theFor", "completeness", "thought", "update", "read", "speed", "file", "box", "original", "synced", "C", "code", "100M", "line", "file", "fast", "disk", "complete", "table"], "title": "Why is reading lines from stdin much slower in C++ than Python?"},
{"url": "https://stackoverflow.com/questions/3294889/iterating-over-dictionaries-using-for-loops", "tags": ["python", "python-2.7", "dictionary"], "question": ["bit", "puzzled", "following", "code", "theWhat", "understand", "portion", "Python", "recognize", "needs", "read", "key", "dictionary", "special", "word", "Python", "simply", "variable"], "title": "Iterating over dictionaries using 'for' loops"},
{"url": "https://stackoverflow.com/questions/986006/how-do-i-pass-a-variable-by-reference", "tags": ["python", "reference", "parameter-passing", "pass-by-reference"], "question": ["Python", "documentation", "seems", "unclear", "whether", "parameters", "passed", "reference", "value", "following", "code", "produces", "unchanged", "value", "Original", "theIs", "something", "pass", "variable", "actual", "reference"], "title": "How do I pass a variable by reference?"},
{"url": "https://stackoverflow.com/questions/1132941/least-astonishment-and-the-mutable-default-argument", "tags": ["python", "language-design", "least-astonishment"], "question": ["Anyone", "tinkering", "Python", "long", "enough", "bitten", "torn", "pieces", "following", "issue", "thePython", "novices", "would", "expect", "function", "always", "return", "list", "one", "element", "result", "instead", "different", "astonishing", "novice", "theA", "manager", "mine", "first", "encounter", "feature", "called", "dramatic", "design", "flaw", "language", "replied", "behavior", "underlying", "explanation", "indeed", "puzzling", "unexpected", "understand", "internals", "However", "able", "answer", "following", "question", "reason", "binding", "default", "argument", "function", "definition", "function", "execution", "doubt", "experienced", "behavior", "practical", "use", "really", "used", "static", "variables", "C", "without", "breeding", "bugs", "theBaczek", "made", "interesting", "example", "Together", "comments", "Utaal", "particular", "elaborated", "theTo", "seems", "design", "decision", "relative", "put", "scope", "parameters", "inside", "function", "together", "theDoing", "binding", "inside", "function", "would", "mean", "effectively", "bound", "specified", "default", "function", "called", "defined", "something", "would", "present", "deep", "flaw", "line", "would", "hybrid", "sense", "part", "binding", "function", "object", "would", "happen", "definition", "part", "assignment", "default", "parameters", "function", "invocation", "time", "theThe", "actual", "behavior", "consistent", "everything", "line", "gets", "evaluated", "line", "executed", "meaning", "function", "definition"], "title": "\u201cLeast Astonishment\u201d and the Mutable Default Argument"},
{"url": "https://stackoverflow.com/questions/176918/finding-the-index-of-an-item-given-a-list-containing-it-in-python", "tags": ["python", "list"], "question": ["list", "item", "list", "get", "index", "1", "Python"], "title": "Finding the index of an item given a list containing it in Python"},
{"url": "https://stackoverflow.com/questions/1602934/check-if-a-given-key-already-exists-in-a-dictionary", "tags": ["python", "dictionary"], "question": ["wanted", "test", "key", "exists", "dictionary", "updating", "value", "key", "wrote", "following", "code", "theI", "think", "best", "way", "accomplish", "task", "better", "way", "test", "key", "dictionary"], "title": "Check if a given key already exists in a dictionary"},
{"url": "https://stackoverflow.com/questions/509211/understanding-pythons-slice-notation", "tags": ["python", "list", "slice"], "question": ["need", "good", "explanation", "references", "plus", "Python", "slice", "notation", "theTo", "notation", "needs", "bit", "picking", "theIt", "looks", "extremely", "powerful", "quite", "got", "head", "around"], "title": "Understanding Python's slice notation"},
{"url": "https://stackoverflow.com/questions/423379/using-global-variables-in-a-function", "tags": ["python", "global-variables", "scope"], "question": ["create", "use", "global", "variable", "function", "theIf", "create", "global", "variable", "one", "function", "use", "global", "variable", "another", "function", "need", "store", "global", "variable", "local", "variable", "function", "needs", "access"], "title": "Using global variables in a function"},
{"url": "https://stackoverflow.com/questions/4750806/how-do-i-install-pip-on-windows", "tags": ["python", "windows", "installation", "pip", "easy-install"], "question": ["replacement", "install", "using", "Windows", "better", "way"], "title": "How do I install pip on Windows?"},
{"url": "https://stackoverflow.com/questions/522563/accessing-the-index-in-for-loops", "tags": ["python", "loops", "list"], "question": ["access", "index", "list", "like", "following", "theWhen", "loop", "using", "loop", "access", "loop", "index", "1", "5", "case"], "title": "Accessing the index in 'for' loops?"},
{"url": "https://stackoverflow.com/questions/136097/what-is-the-difference-between-staticmethod-and-classmethod-in-python", "tags": ["python", "oop", "methods", "python-decorators"], "question": ["difference", "function", "decorated", "one", "decorated"], "title": "What is the difference between @staticmethod and @classmethod in Python?"},
{"url": "https://stackoverflow.com/questions/739654/how-to-make-a-chain-of-function-decorators", "tags": ["python", "decorator", "python-decorators"], "question": ["make", "two", "decorators", "Python", "would", "following", "return", "theI", "trying", "make", "way", "real", "application", "-", "trying", "understand", "decorators", "decorator", "chaining", "works"], "title": "How to make a chain of function decorators?"},
{"url": "https://stackoverflow.com/questions/3437059/does-python-have-a-string-contains-substring-method", "tags": ["python", "string", "substring", "contains"], "question": ["looking", "method", "Python", "theI", "want"], "title": "Does Python have a string 'contains' substring method?"},
{"url": "https://stackoverflow.com/questions/252703/difference-between-append-vs-extend-list-methods-in-python", "tags": ["python", "list", "data-structures", "append", "extend"], "question": ["difference", "list", "methods"], "title": "Difference between append vs. extend list methods in Python"},
{"url": "https://stackoverflow.com/questions/53513/how-do-i-check-if-a-list-is-empty", "tags": ["python", "list"], "question": ["example", "passed", "following", "theHow", "check", "see", "empty"], "title": "How do I check if a list is empty?"},
{"url": "https://stackoverflow.com/questions/3207219/how-do-i-list-all-files-of-a-directory", "tags": ["python", "directory"], "question": ["list", "files", "directory", "Python", "add"], "title": "How do I list all files of a directory?"},
{"url": "https://stackoverflow.com/questions/613183/how-do-i-sort-a-dictionary-by-value", "tags": ["python", "sorting", "dictionary"], "question": ["dictionary", "values", "read", "two", "fields", "database", "string", "field", "numeric", "field", "string", "field", "unique", "key", "dictionary", "theI", "sort", "keys", "sort", "based", "values", "theNote", "read", "Stack", "Overflow", "question", "probably", "could", "change", "code", "list", "dictionaries", "since", "really", "need", "list", "dictionaries", "wanted", "know", "simpler", "solution"], "title": "How do I sort a dictionary by value?"},
{"url": "https://stackoverflow.com/questions/38987/how-to-merge-two-dictionaries-in-a-single-expression", "tags": ["python", "python-3.x", "dictionary", "mapping", "idioms"], "question": ["two", "Python", "dictionaries", "want", "write", "single", "expression", "returns", "two", "dictionaries", "merged", "method", "would", "need", "returned", "result", "instead", "modifying", "dict", "in-place", "theHow", "get", "final", "merged", "dict", "extra-clear", "last-one-wins", "conflict-handling", "looking", "well"], "title": "How to merge two dictionaries in a single expression?"},
{"url": "https://stackoverflow.com/questions/273192/how-can-i-safely-create-a-nested-directory-in-python", "tags": ["python", "exception", "path", "directory", "operating-system"], "question": ["elegant", "way", "check", "directory", "file", "going", "written", "exists", "create", "directory", "using", "Python", "tried", "theSomehow", "missed", "thanks", "kanja", "Blair", "Douglas", "theIs", "flag", "open", "makes", "happen", "automatically"], "title": "How can I safely create a nested directory in Python?"},
{"url": "https://stackoverflow.com/questions/89228/calling-an-external-command-in-python", "tags": ["python", "shell", "command", "subprocess", "external"], "question": ["call", "external", "command", "typed", "Unix", "shell", "Windows", "command", "prompt", "within", "Python", "script"], "title": "Calling an external command in Python"},
{"url": "https://stackoverflow.com/questions/419163/what-does-if-name-main-do", "tags": ["python", "namespaces", "main", "python-module", "idioms"], "question": [], "title": "What does if __name__ == \u201c__main__\u201d: do?"},
{"url": "https://stackoverflow.com/questions/100003/what-are-metaclasses-in-python", "tags": ["python", "oop", "metaclass", "python-datamodel"], "question": ["metaclasses", "use"], "title": "What are metaclasses in Python?"},
{"url": "https://stackoverflow.com/questions/394809/does-python-have-a-ternary-conditional-operator", "tags": ["python", "operators", "ternary-operator", "conditional-operator", "python-2.5"], "question": ["Python", "ternary", "conditional", "operator", "possible", "simulate", "one", "using", "language", "constructs"], "title": "Does Python have a ternary conditional operator?"},
{"url": "https://stackoverflow.com/questions/82831/how-do-i-check-whether-a-file-exists", "tags": ["python", "file"], "question": ["see", "file", "exists", "without", "using", "statement"], "title": "How do I check whether a file exists?"}
]